# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Anytask tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-20.04

    services:
      minio:
        image: fclairamb/minio-github-actions
        ports:
          - 9000:9000

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        pip install pip>=9.0.1
        pip install --upgrade flake8 'setuptools-scm==5.0.2'
        pip install -r requirements_local.txt
        sudo apt-get install p7zip-full tar xz-utils bzip2 gzip
    - name: Lint with flake8
      run: |
        cd anytask
        flake8 --version
        flake8
    - name: Create MinIO test bucket
      run: |
        s3cmd --no-ssl --access_key minioadmin --secret_key minioadmin \
          --host localhost:9000 --host-bucket localhost:9000 \
          mb s3://anytask-test-s3
    - name: Run django tests
      run: |
        cd anytask
        python manage.py test

  docker-publish:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}